<?php namespace Peteleco\Buzzlead\Test;

use Faker\Generator;
use Orchestra\Testbench\TestCase as Orchestra;
use Peteleco\Buzzlead\Api\ConversionRequest;
use Peteleco\Buzzlead\Api\CreateAmbassadorRequest;
use Peteleco\Buzzlead\Model\OrderForm;
use Peteleco\Buzzlead\Model\SourceForm;

/**
 * Class TestCase
 *
 * @package Peteleco\Buzzlead\Test
 */
abstract class TestCase extends Orchestra
{

    /**
     * @var Generator
     */
    public $faker;

    /**
     *
     */
    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->faker = \Faker\Factory::create();
    }

    public function createConversion($voucher)
    {
        $api = new ConversionRequest($this->config['buzzlead']);
        $api->setOrderForm(new OrderForm([
            'codigo' => $voucher,
            'pedido' => $orderId = $this->faker->uuid,
            'total'  => 151.10,
            'nome'   => $this->faker->name,
            'email'  => $this->fakeEmail(),
        ]));
        $api->send();

        return $orderId;
    }

    /**
     * @param \Illuminate\Foundation\Application $app
     *
     * @return array
     */
    protected function getPackageProviders($app)
    {
        return [
            \Peteleco\Buzzlead\BuzzleadServiceProvider::class,
        ];
    }

    /**
     * Cria um embaixador e retona o voucher id
     *
     * @return array
     */
    protected function createAmbassador(): array
    {
        $api = new CreateAmbassadorRequest($this->config['buzzlead']);

        $api->setSourceForm($sourceForm = new SourceForm([
            'name'  => $name = $this->faker->name(),
            'email' => $email = $this->fakeEmail()
        ]));

        $response = $api->send();

        return [
            'voucher' => $response->getVoucher(),
            'name'    => $name,
            'email'   => $email
        ];
    }

    /**
     * Buzzlead fakeemail
     * @return string
     */
    public function fakeEmail() {
        return 'fake-' . $this->faker->email();
    }

    /**
     * @test
     */
    public function it_creates_fake_email() {
        $this->assertTrue((substr($this->fakeEmail(), 0, strlen('fake')) === 'fake'));
    }
}